// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package mock_main is a generated GoMock package.
package mock_main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MocklogInterface is a mock of logInterface interface.
type MocklogInterface struct {
	ctrl     *gomock.Controller
	recorder *MocklogInterfaceMockRecorder
}

// MocklogInterfaceMockRecorder is the mock recorder for MocklogInterface.
type MocklogInterfaceMockRecorder struct {
	mock *MocklogInterface
}

// NewMocklogInterface creates a new mock instance.
func NewMocklogInterface(ctrl *gomock.Controller) *MocklogInterface {
	mock := &MocklogInterface{ctrl: ctrl}
	mock.recorder = &MocklogInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocklogInterface) EXPECT() *MocklogInterfaceMockRecorder {
	return m.recorder
}

// Error mocks base method.
func (m *MocklogInterface) Error(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Error", arg0)
}

// Error indicates an expected call of Error.
func (mr *MocklogInterfaceMockRecorder) Error(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Error", reflect.TypeOf((*MocklogInterface)(nil).Error), arg0)
}

// Info mocks base method.
func (m *MocklogInterface) Info(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Info", arg0)
}

// Info indicates an expected call of Info.
func (mr *MocklogInterfaceMockRecorder) Info(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Info", reflect.TypeOf((*MocklogInterface)(nil).Info), arg0)
}
